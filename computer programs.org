* *Tasks*
** DONE [#A] Finalize the Osmolarity program
*** DONE Upload the changes from yesterday and makes sure you didn't inrtoduce any bugs
*** DONE Fix the problems with the figures.
*** DONE Make Adam's corrections
*** DONE Refactor, refactor, refactor
*** DONE Give better hints on calculation questions in osmolarity program
** DONE [#A] Add got for hemodynamics and renal calculation

** DONE [#A] [[message://%3CF7615B7D-9D3B-4340-8AA1-3F307FB2A49D@rush.edu%3E][Correct Renal Calculations Program]]
:PROPERTIES:
:SYNCID:   69A1A32B-7B87-4EBA-8878-8C29E49EF85B
:ID:       04868A4F-8303-41D8-ACF3-00F83F9A7604
:END:
[2018-09-07 Fri]
** ON RADAR Take a look at this.  It might help javascript edevelopment [[http://eschulte.github.io/emacs-web-server/Introduction.html#Introduction][Emacs Web Server (web-server) User Manual: Introduction]] 
** ON RADAR [[https://jrsinclair.com/articles/2016/gentle-introduction-to-javascript-tdd-intro/][A Gentle Introduction to Javascript Test Driven Development: Part 1]]
** Work on a javascript page for concept map exercises
SCHEDULED: <2020-02-03 Mon>
:PROPERTIES:
:SYNCID:   4250BFE1-8D73-4D4A-8454-4021216DB9AD
:ID:       2953301B-3458-42CC-BC65-AF1BE75BC731
:END:
*** [[https://www.youtube.com/watch?v=SxmTvpU260Y][Drag and Drop Application Development DnD Tutorial - YouTube]] :: http://www.developphp.com
:PROPERTIES:
:SYNCID:   4E343178-CF55-4294-B369-78069173E4F9
:ID:       C756A8CC-1B55-4975-A880-FBD2AD4D7DBA
:END:
** ON RADAR Web Application Architecture: Definitions, Types, and Components 
https://dzone.com/articles/web-application-architecture-definition-types-and?utm_medium=feed&utm_source=feedpress.me&utm_campaign=Feed%3A+dzone%2Fwebdev

* *Meetings*
* *Ticklers*
* *Notes*
** Links to updated programs 2019-06-27
*** http://bearingthenews.com/actionpotential/
*** http://bearingthenews.com/hemodynamics/
*** http://bearingthenews.com/circsim/
*** http://bearingthenews.com/ANSworkshop/
*** http://bearingthenews.com/renalcalculations/

** [[https://www.tutorialon.com/p/fxmltojavaconverter.html][FXML 2 Java Converter - TutorialOn]] 
** [[https://codebeautify.org/xml-to-html-converter][Best Online XML to HTML Converter:Display XML into HTML format]] 
** [[https://stackoverflow.com/questions/15318357/show-hide-image-with-javascript][html - Show/hide image with JavaScript - Stack Overflow]] Used this code in the osmolarity program.
** [[https://stackoverflow.com/questions/5852583/is-javascript-an-object-oriented-language#5852588][Is javascript an object oriented language? - Stack Overflow]] 
This describes how to make objects in javascript.  Could come in handy one day.
** [[https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Object-oriented_JS][Object-oriented JavaScript for beginners - Learn web development | MDN]] 
Describes how to use Javascript as an object-oriented language.
** [[https://binarynights.com/][ForkLift 3 - most advanced file manager and FTP client for macOS]] 
I evidently have version 1.  Apparently this version isn't availabel in the app store.  I don't see anything here I can't live without but you might consider it in the future.  I use version 1 as an ftp client a lot, especially for uploading the web programs as I'm programing.
** [[https://dzone.com/articles/validating-arguments-in-javascript-like-a-boss?utm_campaign=Feed:%20dzone%2Fwebdev&utm_medium=feed&utm_source=feedpress.me][Validating Arguments in JavaScript Like a Boss - DZone Web Dev]] 
** [[https://dzone.com/articles/javascript-object-in-depth-part-1fundamental?utm_campaign=Feed:%20dzone%2Fwebdev&utm_medium=feed&utm_source=feedpress.me][JavaScript Objects in Depth, Part 1: The Fundamentals - DZone Web Dev]] 
** [[https://dzone.com/articles/javascript-objects-in-depth-part-2-inheritance?utm_campaign=Feed:%20dzone%2Fwebdev&utm_medium=feed&utm_source=feedpress.me][JavaScript Objects in Depth, Part 2: Inheritance - DZone Web Dev]]

** How to combine arrays in Javscript

The article showed the first one.  COuldn't access the rest of the article because it seems to be behind a pay wall.



1. Concat()

The most basic way is using the concat() method. It's very simple; you just have to define two arrays and combine them as shown. (Remember the sequence matters.)

let firstArray = [1,2,3,'Shinchan']
let secondArray = ['Nohara',4,5,6]
let combinedArray1 = firstArray.concat(secondArray)
let combinedArray2 = secondArray.concat(firstArray)

console.log(`Combined Array1 = `+combinedArray1)
// Combined Array1 = 1,2,3,Shinchan,Nohara,4,5,6

console.log(`Combined Array2 = `+combinedArray2)
//Combined Array2= Nohara,4,5,6,1,2,3,Shinchan

  [2019-07-24 Wed]
  [[gnus:gwene.com.dzone.webdev#x1-7uLB2jbeqbi5m32UyBwMzlER4nA@gwene.org][Email from Ashutosh Singh: Three Ways to Combine Arrays i]]

** [[https://www.youtube.com/watch?v=SxmTvpU260Y][Drag and Drop Application Development DnD Tutorial - YouTube]] :: http://www.developphp.com
:PROPERTIES:
:SYNCID:   4E343178-CF55-4294-B369-78069173E4F9
:ID:       58D0B193-113C-433B-83DF-7A75B9A7A6F9
:END:
** Three Javascript Array Methods
https://dzone.com/articles/3-javascript-array-methods-every-developer-should?utm_medium=feed&utm_source=feedpress.me&utm_campaign=Feed%3A+dzone%2Fwebdev
In this article, we will discuss:

1 join()
2 split()
3 sort()
** Three Ways to Define Functions in JavaScript 
https://dzone.com/articles/three-ways-to-define-functions-in-javascript?utm_medium=feed&utm_source=feedpress.me&utm_campaign=Feed%3A+dzone%2Fwebdev

Describes anonymous functons and generator funciotns.  Good article.
** Four Ways to Create JavaScript Objects 
https://dzone.com/articles/four-ways-to-create-javascript-objects?utm_medium=feed&utm_source=feedpress.me&utm_campaign=Feed%3A+dzone

** How Generator Functions Work in JavaScript

https://dzone.com/articles/how-generators-function-works-in-javascript-2?utm_medium=feed&utm_source=feedpress.me&utm_campaign=Feed%3A+dzone

One of the most exciting new features of JavaScript is the creation of a new breed of Generator functions. The purpose of this article is to explain the fundamentals of how they
work and to help you understand why they are so powerful for the future of JavaScript.

Introduction

What is Generator function?

When a normal function starts running, it will always run to completion before any other JavaScript code can run. This is called a run-to-completion model.

A Generator function works differently; it may be paused in the middle, one or many times, and resumed later, allowing other code to run during these paused periods.

Inside the generator function body, we can use the new yield keyword to pause the function from inside itself. Nothing can pause a generator from the outside and once a
generator has yield-paused itself, it cannot resume on its own. An external control is required to restart the generator.
** [[https://dzone.com/articles/a-brief-introduction-to-closures-and-lexical-scopi?utm_medium=feed&utm_source=feedpress.me&utm_campaign=Feed:%20dzone][A Brief Introduction to Closures and Lexical Scoping in JavaScript - DZone Web Dev]]
** FU Raul_A_Arias-Garcia@rush.edu [[message://%3c53389e88a6e1402ba699579269c81c3e@RUDW-EXCHMAIL02.rush.edu%3E][M1 Student Roster]]
SCHEDULED: <2019-09-23 Mon>
:PROPERTIES:
:SYNCID:   E816CB81-1948-4351-87E2-9DE684251C98
:ID:       6291302D-8A0F-4EE2-8C1E-028076AC0EEE
:END:
:LOGBOOK:
- Note taken on [2019-10-04 Fri 13:41] \\
  Helped out with the computer programs.  Contact him if you have more trouble.
- State "DONE"       from "TODO"       [2019-10-04 Fri 08:45]
:END:
* DONE [[message://%3cE4E925AF-0DA3-45E0-B157-D9B86F540C7C@rush.edu%3E][Call help desk to ask about getting programs installed on students desktops]]
* DONE Answers to GASP are not appearing correctly.
* DONE [#C] [[message://%3cb1dcf58b51bf49dd899a616166d9c095@646005169%3E][Upgrade Matlab]]
* DONE [#A] Check hemodynamics for isNumeric bug.
** Do the boxes accept '1'?  If not, change to match RenalCalculations (AssessmentNumericalAnswer)
* DONE [#A] Change the toolbar image for RenalCalculations
