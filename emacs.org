* *Tasks*
** DONE [[https://github.com/org2blog/org2blog/blob/master/README.org][Set up org2blog]]
   [2018-12-26 Wed]
** Create a function to warn user before creating a back up org file.
*** Decided not to do this.  I htink its an iCloud problem
** DONE [#A] Look at emacs dictionary for javascript.
** DONE [#A] Stop using clipbard to store information for functions.  Look up registers and start using them.
** DONE speedbar
** DONE [#A] javascript in emacs?
** DONE The Emacs Ipython Notebook- John Miller (Honeywell UOP) - YouTube
https://www.youtube.com/watch?v=OB9vFu9Za8w
** CANCELED https://dev.to/deciduously/how-i-emacs-and-so-can-you-packages-m9p Company mode

***  (add-hook 'after-init-hook 'global-company-mode)
(provide 'init-company)
*** Tried this.  Didn't like it.
** CANCELED https://dev.to/deciduously/how-i-emacs-and-so-can-you-packages-m9p neotree
*** Decided I didn't need this either.
** ON RADAR [#C] [[http://melpa.org/#/pubmed]] 
** DONE [#C] [[http://blog.anmoljagetia.me/perfect-macos-launcher-for-emacs/][Perfect macOS Emacs workflow]] 
** DONE [#C] [[https://nullprogram.com/blog/2017/10/27/][Make Flet Great Again « null program]] Look into lisp unit testing
** DONE [#A] [[https://github.com/abo-abo/swiper][GitHub - abo-abo/swiper: Ivy - a generic completion frontend for Emacs, Swiper - isearch with an overview, and more. Oh, man!]] 
** ON RADAR [#C] [[http://doc.rix.si/cce/cce-emacs-core.html][Complete Computing Environment: Core Emacs]] 
** CANCELED Power thesaurus - downloaded the meriam webster package.
** CANCELED [#A] [[https://orgmode.org/manual/Structure-Editing.html#index-org_002dnarrow_002dto_002dsubtree][The Org Manual: Structure Editing]] Narrow to sub tree worked for indent problem?  Maybe you should add narwoing to initial copying of subtree to variable

Its working fine the way it is.  Don't mess with it unless you have to.
** DONE [#A] [[https://jonathanabennett.github.io/blog/2019/05/28/emacs.org-~-may-2019/][Emacs.org ~ May 2019 - Jonathan Bennett's Blog]] Erc
Coldn't get this to work.
** CANCELED [#A] [[https://myfitnesspal.desk.com/customer/portal/articles/11365-can-i-export-my-data-or-email-my-diary-to-my-trainer-doctor-or-nutritionist-][MyFitnessPal | Can I export my data, or email my diary ...]] 
- Note taken on [2019-06-11 Tue 15:15] \\
  Not worth the trouble.  MyFitnessPal is good enough.
** DONE [#A] Prettify org buffers
** ON RADAR [[https://emacs.stackexchange.com/questions/5938/how-to-make-auto-complete-work-in-auctex-mode][latex - How to make auto-complete work in AucTeX mode? - Emacs Stack Exchange]] 
** CANCELED GitHub - atomontage/xterm-color: ANSI & xterm-256 color text property translator for Emacs
:LOGBOOK:
- Note taken on [2019-06-27 Thu 13:54] \\
  Eh  Don't need this.
:END:
[2019-06-14 Fri 05:57]
https://github.com/atomontage/xterm-color
** CANCELED PGF/TikZ - Wikipedia :: Eh.  Too complicated and it doesn't sound like anything I need.
[2019-06-14 Fri 05:58]
https://en.wikipedia.org/wiki/PGF/TikZ
** DONE Write a lisp function to do the text processing for copying a meeting from Mac calendar application
** ON RADAR Evil for iPad?
** ON RADAR [[https://github.com/DerBeutlin/date2name.el][DerBeutlin/date2name.el: Emacs package to add ISO timestamps to files in dired]]


In dired call date2name-dired-add-date-to-name to add the modification date of the file to the filename. With the prefix C-u the user is instead prompted to insert a date using the wonderful org-read-date. With two prefixes C-u the user is only prompted once for all marked files. The same is true for filetags-dired-add-datetime-to-name only that it also adds the time. The format is again the same as in date2name of novoid.

2018-07-06_test.txt
2018-07-06T13.53.09_test.txt
Unfortunately right now this format should not be changed as it must match a corresponding regexp to remove potential timestamps already in the filename.
** ON RADAR Write something that eith takes a reminder and transforms it into org-mode or vice-versa
** ON RADAR [[https://github.com/skeeto/emacs-web-server][GitHub - skeeto/emacs-web-server: Extensible Emacs HTTP 1.1 server]] 
** TODO [[message://%3c66DC67E2-BBC5-4BAC-9A89-4DBB084538A6@rush.edu%3E][macos - How do I set a task to run every so often? - Stack Overflow]]
** TODO Search pubmed from within emacs : emacs
https://www.reddit.com/r/emacs/comments/cvps0w/search_pubmed_from_within_emacs/

Search pubmed from within emacs

* *Org*
** [[file:~/Library/Mobile%20Documents/com~apple~Preview/Documents/org%20manual%202019-01-13.pdf][file:~/Library/Mobile Documents/com~apple~Preview/Documents/org manual 2019-01-13.pdf]]
** \C-cam to match tag or property
** GitHub - aladine/EverOrg: Evernote to Org mode migration tool
[2019-01-20 Sun 09:28]
https://github.com/aladine/EverOrg
** [[http://notesyoujustmightwanttosave.blogspot.com/2011/12/org-speed-keys.html][Org Speed Keys | *scratch*]]
** [[https://orgmode.org/manual/Images.html#Images][Org Mode Image Handling]]

11.7 Images

An image is a link to an image file118 that does not have a description part, for example

./img/cat.jpg
If you wish to define a caption for the image (see Captions) and maybe a label for internal cross references (see Internal Links), make sure that the link is on a line by itself and precede it with ‘CAPTION’ and ‘NAME’ keywords as follows:

#+CAPTION: This is the caption for the next figure link (or table) #+NAME: fig:SED-HR4049 [[./img/a.jpg]]
Such images can be displayed within the buffer with the following command:

C-c C-x C-v (org-toggle-inline-images)
Toggle the inline display of linked images. When called with a prefix argument, also display images that do have a link description. You can ask for inline images to be displayed at startup by configuring the variable org-startup-with-inline-images119.

Footnotes

(118)

What Emacs considers to be an image depends on image-file-name-extensions and image-file-name-regexps.

(119)

The variable org-startup-with-inline-images can be set within a buffer with the ‘STARTUP’ options ‘inlineimages’ and ‘noinlineimages’.
** [[help:org-file-apps]] - this is the variable to set to associate file types with programs to open org links
** DONE [[https://m.youtube.com/watch?v=KdcXu_RdKI0&amp=&feature=youtu.be]] Org capture video
** [[https://orgmode.org/worg/org-tutorials/advanced-searching.html]] org-mode search functions
** [[https://org-babel.readthedocs.io/en/latest/eval/][Code blocks - Org Babel reference card]] 
How to execute code blocks by name to insert the results in an org buffer
** [[https://org-babel.readthedocs.io/en/latest/eval/][Code blocks - Org Babel reference card]] Named code blocks for execution as part of a file*
** CANCELED [#C] [[https://github.com/org2blog/org2blog/tree/v1.1.0#installation][GitHub - org2blog/org2blog at v1.1.0]] 
** CANCELED [[https://jingsi.space/post/2017/04/30/org-protocol/][org-protocol]] See if you can use the JavaScript at the bottom for your own Scripts
** [[https://tableconvert.com/?output=latex&import=example][Table Convert Online - table to markdown,csv,json,latex table,excel,sql,xml]] 
:PROPERTIES:
:SYNCID:   6C91F2FA-CD4C-40D1-A760-410BF973254F
:ID:       BA6CCB74-13FA-4FC5-96C9-34E63C3445AE
:END:

** Users' Guide - beorg
[2019-06-01 Sat 06:17]
https://beorgapp.com/manual/#url-scheme
** [[https://www.youtube.com/watch?v=2t925KRBbFc][Introduction to org-ref - YouTube]]

** Using templates to keep a reading journal - beorg
https://beorg.app/learning/using-templates-to-keep-a-reading-log/
** Record position and return commands
‘C-c %     (org-mark-ring-push)’
     Push the current position onto the mark ring, to be able to return
     easily.  Commands following an internal link do this automatically.
‘C-c &     (org-mark-ring-goto)’
     Jump back to a recorded position.  A position is recorded by the
     commands following internal links, and by ‘C-c %’.  Using this
     command several times in direct succession moves through a ring of
     previously recorded positions.
  [[info:org#Handling%20links][info:org#Handling links]]
** ON RADAR [[https://orgmode.org/worg/dev/org-element-api.html][Org Element API]] :: Consider using this to get the beginning and end of an item in trs-org-sync

** [[https://emacs.stackexchange.com/questions/17282/org-mode-logbook-note-entry-without-logbook-drawer][org mode logbook note entry without logbook drawer? - Emacs Stack Exchange]] 
** [[https://www.reddit.com/r/emacs/comments/c5j3x7/org_version_924_insert_template_at_point_doesnt/?utm_source=share&utm_medium=ios_app][https://www.reddit.com/r/emacs/comments/c5j3x7/org_version_924_insert_template_at_point_doesnt/?utm_]] Org capture at point using c-0 prefix?
** [[https://addons.mozilla.org/en-US/firefox/addon/edit-with-emacs1/][Edit with Emacs – Get this Extension for 🦊 Firefox (en-US)]] There might be an org extension too
:PROPERTIES:
:SYNCID:   80118DEE-B036-4EA9-AB6F-74DC1112845B
:ID:       AFBB4BA6-0C1B-482B-B7BE-94C966AE0388
:END:
:LOGBOOK:
- Note taken on [2019-06-26 Wed 07:18] \\
  Did add an extension that adds a context menu item to copy link to clipboard in org format.
:END:
** [[https://orgmode.org/worg/org-tutorials/advanced-searching.html][Advanced searching]]
** [[https://emacs.stackexchange.com/questions/51593/hide-slashes-in-italic-text][org mode - Hide slashes in italic text - Emacs Stack Exchange]] 
** [[https://www.reddit.com/r/planetemacs/comments/ccqx9h/introduction_to_orgref_youtube/?utm_source=share&utm_medium=ios_app][https://www.reddit.com/r/planetemacs/comments/ccqx9h/introduction_to_orgref_youtube/?utm_source=shar]] 
** [[https://m.youtube.com/watch?v=2t925KRBbFc][Introduction to org-ref - YouTube]] Could be particularly useful for putting together a bib file
** [[https://github.com/jkitchin/org-ref/blob/master/org-ref.org][org-ref/org-ref.org at master · jkitchin/org-ref · GitHub]] 

** [[https://orgmode.org/manual/index.html][The Org Manual: Top]] 
** TODO [[https://emacs.stackexchange.com/questions/50137/show-apple-calendar-events-in-org-mode/50185#50185][ical - Show Apple Calendar events in org-mode - Emacs Stack Exchange]]
** ON RADAR This looks like it might be a better way to recursively add directories to agenda files
[2019-07-18 Thu 02:38]
https://www.reddit.com/r/orgmode/comments/cej7r2/orgrefile_and_subfolders/?utm_source=share&utm_medium=ios_app
** TODO Fix calendar-from-kill so that it takes all day events.
** CANCELED [#A] worg-dev/ical2org.awk at master · mjago/worg-dev · GitHub
:LOGBOOK:
- State "CANCELED"   from "TODO"       [2019-07-22 Mon 08:36] \\
  Couldn't find a good way to export from calendar app without exporting the whole calendar - which takes forever.
:END:
[2019-07-19 Fri 02:33]
https://github.com/mjago/worg-dev/blob/master/code/awk/ical2org.awk
** DONE [#A] Try this! [[https://orgmode.org/manual/Attachments.html][The Org Manual: Attachments]]
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-07-29 Mon 08:05]
:END:

** Instructions to completely reset git to github copy

1)  git fetch --all
2)  git reset --hard origin/master

  [[gnus:gwene.com.leancrew.all-this][gnus:gwene.com.leancrew.all-this]]
** ON RADAR Do something like this. [[http://www.bobnewell.net/publish/35years/webclipper.html][A Web Clipper of Sorts for Org-Mode]]

*** Set up capture template

*** Set up functon that either copies in region, page or link only
** TODO org-web - org mode on the web
https://github.com/DanielDe/org-web/
** TODO Add comment option to safari/mail/reminder/calendar functions
** TODO [[https://bulletjournal.com/pages/learn][Learn - Bullet Journal]]

* *Dired*
** Search for words in files
*** Use find-grep-dired
*** Emacs: Search Text in Files
[2018-12-18 Tue 04:19]
http://ergoemacs.org/emacs/emacs_grep_find.html
*** Dired and Find - GNU Emacs Manual
[2018-12-18 Tue 04:21]
https://www.gnu.org/software/emacs/manual/html_node/emacs/Dired-and-Find.html
** How to sort dired by date by default [[https://superuser.com/questions/875241/emacs-dired-sorting-by-time-date-as-default#1212406]] 
** [[https://emacs.stackexchange.com/questions/5603/how-to-quickly-copy-move-file-in-emacs-dired#5604]] How to copy files between windows
(setq dired-dwim-target t)
** [[https://www.emacswiki.org/emacs/RecentFiles]] 
** to search marked files in dired for a regex: mark all of the files (* /, for instance, to select all directories and t to toggle the mark to all files), shift-A to search, M-, to move from hit to hit.
** C-x C-q make dired buffer editable, C-c C-c to end editing and "save" changes
** DONE [[https://github.com/jojojames/dired-sidebar][GitHub - jojojames/dired-sidebar: Sidebar for Emacs leveraging Dired]] 

** [[~/Library/Mobile Documents/com~apple~Preview/Documents/dired-ref.pdf][dired reference card for keybindings]]
** [[https://oremacs.com/2015/01/04/dired-nohup/][Start a process from dired · (or emacs]] 
:LOGBOOK:
- Note taken on [2019-07-01 Mon 07:30] \\
  Here are the standard dired functions for starting processes:
  
  ! calls dired-do-shell-command
  & calls dired-do-async-shell-command
:END:
** DONE [#A] GitHub - DerBeutlin/filetags.el: Emacs package to manage filetags in the filename
SCHEDULED: <2019-07-08 Mon>
[2019-07-06 Sat 07:32]
https://github.com/DerBeutlin/filetags.el
** directory local variables - sounds potentially useful
* *Development*
** [[https://spin.atomicobject.com/2016/05/27/write-emacs-package/][Take Your Emacs to the Next Level by Writing Custom Packages]]  Includes instrucitons on how to push to MELPA.
** [[message://%3c53DBB187-0C25-4BAB-895B-4C73C609AB38@rush.edu%3E][Configureing Emacs for Python]]
** Emacs Balanced Expressions – 77 Mass Ave.
[2019-01-20 Sun 09:19]
https://anoncumlaude.wordpress.com/2019/01/17/emacs-balanced-expressions/
** Example of how to use registers

(set-register ?a (current-kill 0 t))
(insert (concat entryTitle "\n\t" (get-register ?a)))
** Example of how to use registers

(set-register ?a (current-kill 0 t))
(insert (concat entryTitle "\n\t" (get-register ?a)))
** Nice article that shows how to work with IntelliJ and also run lisp from emacsclient. 
[[https://developer.atlassian.com/blog/2015/03/emacs-intellij/][Quick Tip: Getting Emacs and IntelliJ to play together - Atlassian Developers]]
** [[http://mbork.pl/2019-02-17_Inserting_the_current_file_name_at_point][Marcin Borkowski: 2019-02-17 Inserting the current file name at point]]
** DONE [[http://endlessparentheses.com/debugging-emacs-lisp-part-1-earn-your-independence.html]] 
** DONE [[http://endlessparentheses.com/debugging-elisp-part-2-advanced-topics.html]] 
** [[https://cafebedouin.org/2019/03/25/a-road-to-common-lisp-steve-losh/][Learn to Program With Common Lisp – cafebedouin.org]] 
** CANCELED [[https://github.com/emacs-lsp/lsp-mode][GitHub - emacs-lsp/lsp-mode: Emacs client/library for the Language Server Protocol]] 
** Copy-special copies subtree as kill
   [[help:Enabled]]
** 30.11 Subdirectories in Dired

A Dired buffer usually displays just one directory, but you can optionally include its subdirectories as well.

The simplest way to include multiple directories in one Dired buffer is to specify the options ‘-lR’ for running ls. (If you give a numeric argument when you run Dired, then you can specify these options in the minibuffer.) That produces a recursive directory listing showing all subdirectories at all levels.

More often, you will want to show only specific subdirectories. You can do this with i (dired-maybe-insert-subdir):

i
Insert the contents of a subdirectory later in the buffer.
If you use this command on a line that describes a file which is a directory, it inserts the contents of that directory into the same Dired buffer, and moves there. Inserted subdirectory contents follow the top-level directory of the Dired buffer, just as they do in ‘ls -lR’ output.

If the subdirectory's contents are already present in the buffer, the i command just moves to it.

In either case, i sets the Emacs mark before moving, so C-u C-<SPC> returns to your previous position in the Dired buffer (see Setting Mark). You can also use ‘^’ to return to the parent directory in the same Dired buffer (see Dired Visiting).

Use the l command (dired-do-redisplay) to update the subdirectory's contents, and use C-u k on the subdirectory header line to remove the subdirectory listing (see Dired Updating). You can also hide and show inserted subdirectories (see Hiding Subdirectories).
** 30.13 Moving Over Subdirectories

When a Dired buffer lists subdirectories, you can use the page motion commands C-x [ and C-x ] to move by entire directories (see Pages).

The following commands move across, up and down in the tree of directories within one Dired buffer. They move to directory header lines, which are the lines that give a directory's name, at the beginning of the directory's contents.

C-M-n
Go to next subdirectory header line, regardless of level (dired-next-subdir).


C-M-p
Go to previous subdirectory header line, regardless of level (dired-prev-subdir).


C-M-u
Go up to the parent directory's header line (dired-tree-up).


C-M-d
Go down in the directory tree, to the first subdirectory's header line (dired-tree-down).


<
Move up to the previous directory-file line (dired-prev-dirline). These lines are the ones that describe a directory as a file in its parent directory.


>
Move down to the next directory-file line (dired-next-dirline).
** 30.14 Hiding Subdirectories

Hiding a subdirectory means to make it invisible, except for its header line.

$
Hide or show the subdirectory that point is in, and move point to the next subdirectory (dired-hide-subdir). This is a toggle. A numeric argument serves as a repeat count. 
M-$
Hide all subdirectories in this Dired buffer, leaving only their header lines (dired-hide-all). Or, if any subdirectory is currently hidden, make all subdirectories visible again. You can use this command to get an overview in very deep directory trees or to move quickly to subdirectories far away.
Ordinary Dired commands never consider files inside a hidden subdirectory. For example, the commands to operate on marked files ignore files in hidden directories even if they are marked. Thus you can use hiding to temporarily exclude subdirectories from operations without having to remove the Dired marks on files in those subdirectories.

See Subdirectories in Dired, for how to insert a subdirectory listing, and see Dired Updating, for how to delete it.
** 30.16 Dired and find

You can select a set of files for display in a Dired buffer more flexibly by using the find utility to choose the files.

To search for files with names matching a wildcard pattern use M-x find-name-dired. It reads arguments directory and pattern, and chooses all the files in directory or its subdirectories whose individual names match pattern.

The files thus chosen are displayed in a Dired buffer, in which the ordinary Dired commands are available.

If you want to test the contents of files, rather than their names, use M-x find-grep-dired. This command reads two minibuffer arguments, directory and regexp; it chooses all the files in directory or its subdirectories that contain a match for regexp. It works by running the programs find and grep. See also M-x grep-find, in Grep Searching. Remember to write the regular expression for grep, not for Emacs. (An alternative method of showing files whose contents match a given regexp is the % g regexp command, see Marks vs Flags.)

The most general command in this series is M-x find-dired, which lets you specify any condition that find can test. It takes two minibuffer arguments, directory and find-args; it runs find in directory, passing find-args to tell find what condition to test. To use this command, you need to know how to use find.

The format of listing produced by these commands is controlled by the variable find-ls-option. This is a pair of options; the first specifying how to call find to produce the file listing, and the second telling Dired to parse the output.

The command M-x locate provides a similar interface to the locate program. M-x locate-with-filter is similar, but keeps only files whose names match a given regular expression.

These buffers don't work entirely like ordinary Dired buffers: file operations work, but do not always automatically update the buffer. Reverting the buffer with g deletes all inserted subdirectories, and erases all flags and marks.
** [[https://www.youtube.com/watch?v=NDP91RNgT4A&feature=youtu.be&app=desktop][Magit (in Spacemacs): The Absolute Minimum you need to know - YouTube]] :: Use 's' to stage, 'c' to commit and 'P' to push to github,  Use '?' to pull up a menu of options from magit-status

** [[https://jonathanabennett.github.io/blog/2019/06/20/python-and-emacs-pt.-1/][Python and Emacs Pt. 1 - Jonathan Bennett's Blog]]

** DONE bug where cursor move to beginning of topmost item in nested sync
** [[http://pchristensen.com/blog/articles/setting-up-and-using-emacs-infomode/][Setting Up and Using Emacs InfoMode]] 
** Accessing Symbol Properties [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Symbol-Plists.html#Symbol-Plists][Symbol Plists - GNU Emacs Lisp Reference Manual]] 
** GitHub - 6502/JSLisp: A Lisp to Javascript compiler
[2019-07-12 Fri 02:47]
https://github.com/6502/JSLisp

** ON RADAR Check the functions in the comments.  they look useful. [[https://www.reddit.com/r/emacs/comments/cbuhi1/using_mapcar_with_list_of_strings/][Using mapcar with list of strings : emacs]]

** This has how to resolve merge conflicts (6:40).  Basically hit 'e' for ediff, then 'n' (next commit difference), choose 'a (left) or 'b' (right) to choose which one you want to keep. The rebasing demonstration in the second half is kind of cool, too. [[https://www.reddit.com/r/planetemacs/comments/cbw8vp/magit_introduction_and_demonstration_youtube/][Magit Introduction and Demonstration - YouTube : planetemacs]]

** ON RADAR [[https://www.oreilly.com/library/view/writing-gnu-emacs/9781449395056/][Writing GNU Emacs Extensions (Book)]]
** [[https://www.reddit.com/r/emacs/comments/ce3zo0/how_to_make_emacs_keep_checking_a_system_variable/][How to make emacs keep checking a system variable? : emacs]]
** ON RADAR [[https://www.reddit.com/r/lisp/comments/ce3jth/pushing_pixels_with_lisp_episode_73_triplanar/][Pushing Pixels with Lisp - Episode 73 - Triplanar Mapping - Streaming on Twitch Wednesday 7pm UTC : lisp]]
** ON RADAR Consider using this for trs/org-sync
  [[gnus:gwene.com.reddit.orgmode#x1-XeuMLmnaQkDMYZWUp5nQ6h+o5/M@gwene.org][Email from u.: org-ql-block integrates org-ql]]

** ON RADAR Use this code to make trs/org-sync better
  [[gnus:gwene.com.reddit.emacs#x1-dVJrG6Pkl6y4eEyds4BIVv9LBsM@gwene.org][Email from u.: orgmode time dependencies -- h]]
** [[https://magit.vc/manual/magit/Resolving-Conflicts.html][Magit User Manual: Resolving Conflicts]]
* *LaTeX*
** Keyboard shortcut to insert latex
[[https://emacs.stackexchange.com/questions/18619/org-mode-any-keyboard-shortcut-for-latex-code][yasnippet - Org-mode: any keyboard shortcut for Latex code? - Emacs Stack Exchange]]
** Shortcut to indent-region is C-M-\
[[http://mbork.pl/2019-01-28_A_simple_tip_with_killing_and_yanking_code][Marcin Borkowski: 2019-01-28 A simple tip with killing and yanking code]]
** [[https://www.emacswiki.org/emacs/RefTeX]] Reftex 
** [[http://www.gnu.org/software/auctex/manual/reftex.html#SEC1]] Reftex manual
** [[https://www.reddit.com/r/emacs/comments/b9out3/latex_manual_preview/?utm_source=share&utm_medium=ios_app][https://www.reddit.com/r/emacs/comments/b9out3/latex_manual_preview/?utm_source=share&utm_medium=ios]] 
** [[https://tableconvert.com/?output=latex][Table Convert Online - table to markdown,csv,json,latex table,excel,sql,xml]] 
** [[https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols][List of LaTeX mathematical symbols - OeisWiki]] 
** [[https://www.latextemplates.com/][LaTeX Templates]] 
** [[https://www.overleaf.com/][Overleaf, Online LaTeX Editor]] - good site for LaTeX templates
** Its '\C-c )' to reference a label
   [[info:reftex#Referencing%20Labels][info:reftex#Referencing Labels]]
** [[https://ctan.org/tex-archive/info/symbols/comprehensive/][CTAN: /tex-archive/info/symbols/comprehensive]] 
** [[https://tableconvert.com/?output=latex&import=example][Table Convert Online - table to markdown,csv,json,latex table,excel,sql,xml]] 
:PROPERTIES:
:SYNCID:   6C91F2FA-CD4C-40D1-A760-410BF973254F
:ID:       2084FC13-D147-4E2C-B584-C4AD46ACF67C
:END:

** LaTeX - Wikibooks, open books for an open world
https://en.wikibooks.org/wiki/LaTeX

** AUCTeX 12.1: 2.6 Completion Keyboard Shortcut
https://www.gnu.org/software/auctex/manual/auctex/Completion.html
** [[https://www.reddit.com/r/emacs/comments/bzg7fp/inserting_latex_symbols_in_comfort/?utm_source=share&utm_medium=ios_app][Inserting LaTeX symbols in comfort : emacs]]


When typing in LaTeX using AucTeX, it is very useful to be able to insert a number of LaTeX symbols by typing key sequences that begin with "`". For example, "`a" inserts "\alpha" when inside a math environment and "`I" inserts "\infty". Further, with a prefix argument, it will insert what you want inside a couple of dollars. that is, the key sequence "C-u ` a" will insert "$\alpha$".

** [[https://www.overleaf.com/][Overleaf, Online LaTeX Editor]] :: this is an online LaTeX editor.  It could be particularly useful on an iPad.  Trying iSH and emacs now but it it doesn't work this could be used to take notes in meetings at least.

** DONE CTAN: Package csquotes
:LOGBOOK:
- Note taken on [2019-06-27 Thu 13:55] \\
  Eh.  Didn't need this.
:END:
[2019-06-14 Fri 05:58]
https://www.ctan.org/pkg/csquotes
** [[https://duckduckgo.com/?q=latex+how+to+write+a+letter+with+letterhead&t=osx&ia=web][latex how to write a letter with letterhead at DuckDuckGo]]




** This shows how to include letter head but uses the article class rather than the letter class [[https://tex.stackexchange.com/questions/55928/business-letter-template-with-letterhead-on-the-side#55938][Business letter template with letterhead on the side - TeX - LaTeX Stack Exchange]]


** [[https://texblog.org/2007/08/15/writing-a-letter-in-latex/][Writing a letter in Latex – texblog]]

#+BEGIN_EXPORT latex
\documentclass{letter}
\signature{Your name}
\address{Street \\ City \\ Country}
\begin{document}
\begin{letter}{Company name \\ Street\\ City\\ Country}
\opening{Dear Sir or Madam:}
\dots
\closing{Yours Faithfully,}
\ps{P.S. Here goes your ps.}
\encl{Enclosures.}
\end{letter}
\end{document}
#+END_EXPORT


** [[http://joostkremers.github.io/ebib/][ebib | A BibTeX database manager for Emacs.]] Sexuality and Reproduction Core Disciplines Meeting; Location: AAC 403- Large Room <2019-07-12 Fri 14:30-15:30>
** If then in LaTeX
[2019-07-16 Tue 04:00]
https://www.reddit.com/r/LaTeX/comments/cdjp62/piecewise_functions/?utm_source=share&utm_medium=ios_app
** TODO [[https://pay.reddit.com/r/LaTeX/comments/cghc50/how_do_i_add_a_1_inch_indent_to_this_document/][How do I add a 1 inch indent to this document? : LaTeX]]
Exam document class?



** TODO [[http://texdoc.net/texmf-dist/doc/latex/attachfile/attachfile.pdf][‎texdoc.net/texmf-dist/doc/latex/attachfile/attachfile.pdf]]

* *Miscellaneous*
** How do I get to the menu in Emacs in console mode? - Stack Overflow

[2019-07-03 Wed 05:13]https://stackoverflow.com/questions/191312/how-do-i-get-to-the-menu-in-emacs-in-console-mode#191377
** ON RADAR [[https://www.reddit.com/r/planetemacs/comments/c90kp8/using_emacs_episode_52_eyebrowse_youtube/?utm_source=share&utm_medium=ios_app][Try eyebrows.]]  Looks like it might be helpful.
[2019-07-04 Thu 06:10]

** emms (emacs multimedia)
Try this. 
emms ftw
I never got into the Emacs MultiMedia System, but just read that it has support for streaming radios so I gave it a try. And you know what?  It's awesome.  I'm adding all the radios I have in my radios repo.

But you already knew that.

Only a few concepts/commands:
- m-x emms-streams RET
- m-x emms RET
- c-+ + + +
- m-x emms-add-dired RET

Enough to get by and start using it.









http://puntoblogspot.blogspot.com/search/label/emacs
** ON RADAR [#C] [[https://www.reddit.com/r/emacs/comments/b13n39/how_do_you_manage_window_sizes_in_emacs/]] 
C-u (number of lines) C-x ^ to enlarge.  Negative argument shrinks window
** [[https://www.reddit.com/r/emacs/comments/b1h4ge/cycle_through_a_set_of_buffers/]] emacs -slack?
** [[https://www.reddit.com/r/emacs/comments/b13n39/how_do_you_manage_window_sizes_in_emacs/]] 
** [[https://emacs.stackexchange.com/questions/5603/how-to-quickly-copy-move-file-in-emacs-dired#5604]] How to copy files between windows
** [[1.3 Execute code/settings on the fly

Unlike other environments and programs that pretend to be interactive, Emacs actually is. When you see a code snippet closed between parenthesis (well, it needs to be somewhat valid Elisp) like for example:

(message "Mozart is a great %s."
         (if (> (string-to-number (emacs-uptime "%H")) 3)
             "programmer"
           "composer"))
it can be immediately executed by placing the cursor just after the last closing paren and pressing:

C-x C-e

You can (re)set/(re)define functions, variables, whatever this way and it immediately comes into effect. This holds for everything you see below.]] 1.3 Execute code/settings on the fly

Unlike other environments and programs that pretend to be interactive, Emacs actually is. When you see a code snippet closed between parenthesis (well, it needs to be somewhat valid Elisp) like for example:

(message "Mozart is a great %s."
         (if (> (string-to-number (emacs-uptime "%H")) 3)
             "programmer"
           "composer"))
it can be immediately executed by placing the cursor just after the last closing paren and pressing:

C-x C-e

You can (re)set/(re)define functions, variables, whatever this way and it immediately comes into effect. This holds for everything you see below.
** try delete-horizontal-space command

about the delete-horizontal-space command (bound to Meta+\). It deletes all spaces and tabs around the point. You can delete just the white space before the point by specifying the universal argument. I learned about the command from a reddit post by rmberYou that listed some useful Emacs packages.

The post suggested hungry-delete but then added a note about delete-horizontal-space. The suggestion for delete-horizontal-space came from a comment where the command cycle-spacing (bound to Meta+Space) is also discussed. One invocation of cycle-spacing deletes all the spaces but one. Two invocations deletes all the spaces, and three invocations puts things back the way they were.

https://irreal.org/blog/
** [[http://www.howardism.org/Technical/Emacs/templates-tutorial.html][yasnippet]] 
** [[https://irreal.org/blog/?p=7925][deletting blank lines]]
** [[https://joostkremers.github.io/pandoc-mode/]] 
** [[http://christiantietze.de/posts/2019/03/sync-emacs-org-files/][Sync Emacs Org Agenda Files via Dropbox Without Conflicts • Christian Tietze]] 
This can be used for any file and could be handy, for instance, when coding.
** ON RADAR [#C] [[https://qiita.com/daiyanh/items/7f63c5135db4a47b37f7][macros &amp; regex - two headed monsters - Qiita]] Regex builder
** [[https://emacs.stackexchange.com/questions/22688/how-do-i-configure-home-brew-provisioned-emacs-to-run-a-gui-based-emacsclient-pr][How do I configure home-brew-provisioned emacs to run a GUI-based emacsclient properly? - Emacs Stack Exchange]]
** [[https://github.com/abo-abo/ace-window][GitHub - abo-abo/ace-window: Quickly switch windows in Emacs]] Winmove?
** [[https://github.com/Chobbes/org-chef][GitHub - Chobbes/org-chef: A package for making a cookbook and managing recipes with org-mode.]] 
** [[https://www.reddit.com/r/emacs/comments/bbb42t/whats_your_job_whats_your_daily_emacs_workflow/][What's your job? What's your daily emacs workflow? - emacs]] Excorporate for exchange calendar to diary. 
** [[https://irreal.org/blog/?p=7993][https://irreal.org/blog/?p=7993]] Eww-search-words
** [[https://castel.dev/post/lecture-notes-1/]] Snippets and auto expansion for emacs
** [[https://github.com/Malabarba/beacon][GitHub - Malabarba/beacon: A light that follows your cursor around so you don't lose it!]] 
** [[https://www.emacswiki.org/emacs/unbound.el][EmacsWiki: unbound.el]] 
** [[https://github.com/Fuco1/free-keys][GitHub - Fuco1/free-keys: Show free keybindings for modkeys or prefixes]] 
** [[http://mbork.pl/2015-07-04_C-x_4_bindings][Marcin Borkowski: 2015-07-04 C-x 4 bindings]] 
** [[https://freesteph.info/blog/compiling-emacs.html][Compiling Emacs 27 on macOS]] 
** [[https://sachachua.com/blog/2008/07/emacs-bbdb-modifying-the-record-creation-process/][Emacs: BBDB: Modifying the record creation process –]] 
** [[https://github.com/d12frosted/homebrew-emacs-plus/][GitHub - d12frosted/homebrew-emacs-plus: Emacs Plus formulae for the Homebrew package manager]] 
** [[https://next.atlas.engineer/][Next]] 
** [[http://manuel-uberti.github.io//emacs/2019/05/14/occur/][http://manuel-uberti.github.io//emacs/2019/05/14/occur/]] Occur?
** [[https://emacsnotes.wordpress.com/2019/05/19/rectangle-commands-a-handy-tool-for-working-with-multi-columnar-tabular-text/][Rectangle Commands: A handy tool for working with multi-columnar / tabular text – Emacs Notes]] 
** How to save a macro for later use :: [[https://www.reddit.com/r/emacs/comments/brcrbb/comman_ringing_bell_error_when_loading_macro_from/?utm_source=share&utm_medium=ios_app][Comman ringing bell error when loading macro from .emacs - emacs]] 
** [[https://emacsnotes.wordpress.com/2019/05/19/rectangle-commands-a-handy-tool-for-working-with-multi-columnar-tabular-text/][Rectangle Commands: A handy tool for working with multi-columnar / tabular text – Emacs Notes]] 
** Test flight emacs
[2019-06-02 Sun 05:35]
https://www.reddit.com/r/emacs/comments/bvrmsf/emacs_on_an_ipad_without_jailbreaking_it_it_can/?utm_source=share&utm_medium=ios_app
** Emacs: How to Define Keys
http://ergoemacs.org/emacs/keyboard_shortcuts.html
** Make use of the Super key | Emacs Redux
http://emacsredux.com/blog/2013/07/17/make-use-of-the-super-key/
** DONE [#A] Is RCN is BBDB? [[message://%3c7B5C710A-8015-4905-BD49-255F6E9B292B@rush.edu%3E][RCN 2014-06-30.pdf]]

** Instructions for installing emacs on iPad with Test Flight and iSH [[https://www.reddit.com/r/emacs/comments/bvrmsf/emacs_on_an_ipad_without_jailbreaking_it_it_can/?utm_source=share&utm_medium=ios_app][Emacs on an iPad without jailbreaking it - It can be done! : emacs]]
** DONE [#A] Autofill for iPad                                                                                                                         
                                                                                                                                            
** [[http://ergoemacs.org/emacs/elisp_unicode_representation_in_string.html][Elisp: Unicode Escape Sequence]]


** C-s C-w [C-w ... ] to search for a word/expression under a cursor. 

** CANCELED Inkscape - Wikipedia :: Only available if you compile using Macports.  Didn't want to go through this.
[2019-06-14 Fri 05:58]
https://en.wikipedia.org/wiki/Inkscape

** [[https://www.tenderisthebyte.com/blog/2019/06/09/spell-checking-emacs/][Spell Checking in Emacs | Tender Is The Byte]] :: How to remove words from dictionary


Removing words from the dictionary

What happens if you add a word to the dictionary on accident and want to remove it? That’s easy as well. Checking man ispell, you will see a section called FILES that lists all the important files Ispell uses for its spell checking. My default dictionary is English, so my personal Ispell dictionary can be found here: $HOME/.ispell_english. To remove a word from the dictionary, just open that file in your favorite text editor (Emacs, obviously!) and remove the word. For it to take effect, you will likely have to close and restart Emacs.
** [[https://github.com/agzam/mw-thesaurus.el][GitHub - agzam/mw-thesaurus.el: Merriam-Webster Thesaurus in Emacs]] 
** [[http://davmail.sourceforge.net/osximapmailsetup.html][DavMail POP/IMAP/SMTP/Caldav/Carddav/LDAP Exchange Gateway - OSX IMAP Mail setup]]
** DONE [[https://github.com/flycheck/flycheck][GitHub - flycheck/flycheck: On the fly syntax checking for GNU Emacs]]
:LOGBOOK:
- Note taken on [2019-06-28 Fri 06:21] \\
  Installed this.  Let's see if it works when editng javascript the next time I have to do it.
:END:

** DONE [[http://joostkremers.github.io/pandoc-mode/][Introduction | Pandoc-mode]]
:LOGBOOK:
- Note taken on [2019-06-28 Fri 06:22] \\
  Installed this.  Looks like it might be convenient.
:END:

** [[https://github.com/purcell/exec-path-from-shell][GitHub - purcell/exec-path-from-shell: Make Emacs use the $PATH set up by the user's shell]]
:LOGBOOK:
- Note taken on [2019-06-28 Fri 06:22] \\
  Installed this.  I wonder if I can run emacs from the applications folder now?
:END:

** [[https://stackoverflow.com/questions/4987760/how-to-change-size-of-split-screen-emacs-windows][How to change size of split screen emacs windows? - Stack Overflow]]
With the mouse, you can drag the window sizes around.

Click anywhere on the mode line that is not otherwise 'active' (the buffer name is safe, or any unused area to the right hand side), and you can drag up or down.

Side-to-side dragging requires a very precise click on the spot where the two mode lines join.

C-x - (shrink-window-if-larger-than-buffer) will shrink a window to fit its content.

C-x + (balance-windows) will make windows the same heights and widths.

C-x ^ (enlarge-window) increases the height by 1 line, or the prefix arg value. A negative arg shrinks the window. e.g. C-- C-1 C-6 C-x ^ shrinks by 16 rows, as does C-u - 1 6 C-x ^.

(There is no default binding for shrink-window.)

C-x } (enlarge-window-horizontally) does likewise, horizontally.
C-x { (shrink-window-horizontally) is also bound by default.

Following one of these commands with repeat (C-x z to initiate, and just z for continued repetition) makes it pretty easy to get to the exact size you want.

If you regularly want to do this with a specific value, you could record a keyboard macro to do it, or use something like
(global-set-key (kbd "C-c v") (kbd "C-u - 1 6 C-x ^"))

Or this:
(global-set-key (kbd "C-c v") (kbd "C-x o C-x 2 C-x 0 C-u - 1 C-x o"))

Which is a smidgen hacky, so this would be better:

(defun halve-other-window-height ()
  "Expand current window to use half of the other window's lines."
  (interactive)
  (enlarge-window (/ (window-height (next-window)) 2)))

(global-set-key (kbd "C-c v") 'halve-other-window-height)
Tangentially, I also love winner-mode which lets you repeatedly 'undo' any changes to window configurations with C-c left (whether the change is the size/number/arrangement of the windows, or just which buffer is displayed). C-c right returns you to the most recent configuration. Set it globally with (winner-mode 1)
** ON RADAR Try to save window configuration to register the next time you are copying data around
:PROPERTIES:
:SYNCID:   78cecc02-0517-42b9-b798-397e184cc474
:ID:       606b04cd-ef91-450d-bb00-bac20509564b
:END:
[2019-07-05 Fri 05:34]
https://www.reddit.com/r/emacs/comments/c9dewr/persistent_registers/?utm_source=share&utm_medium=ios_app

** ON RADAR Isn't this already possible in default emacs?
[2019-07-06 Sat 07:36]
https://github.com/pashinin/workgroups2
GitHub - pashinin/workgroups2: Workgroups2 - Emacs session manager

Look at "desktop"

** Searching in Buffers with Occur Mode - Mastering Emacs
[2019-07-08 Mon 03:34]
https://www.masteringemacs.org/article/searching-buffers-occur-mode
** [[http://mbork.pl/2019-07-08_Pausing_an_Emacs_keyboard_macro][Marcin Borkowski: 2019-07-08 Pausing an Emacs keyboard macro]]


Pausing an Emacs keyboard macro
As I promised last week, I’d like to describe something I probably knew a long time ago, but completely forgot about.

You can pause an Emacs keyboard macro during its execution.

But wait, there’s more! During recording a macro, you can press C-x q (this means kbd-macro-query), and when the macro is run, Emacs pauses there and gives you four choices:

SPC or y to just continue,
DEL (this means “backspace”, btw) or n to skip the rest of the macro (but not subsequent repetitions – this is important when using a numerical prefix argument when calling the macro),
RET or q to quit this and all subsequent repetitions,
C-r to enter recursive edit or C-l to recenter screen.
That is already pretty cool, but there is even more than that! C-u C-x q during macro recording enters recursive edit, and that serves two purposes: firstly, you may perform some editing which will not become part of the macro, and secondly, during macro execution, you will also enter recursive edit (and the macro will resume after C-M-c).

All this is probably not something you would use every day, but it may come handy once in a while – so it may be good to remember that something like this exists. Hopefully I won’t forget about it anymore!

** ON RADAR Wondering if this could be handy with iPad since some funtions take so long to execute. [[https://github.com/twlz0ne/with-emacs.el][twlz0ne/with-emacs.el: Evaluate expressions in a separate Emacs process]]

** ON RADAR Set up [[https://github.com/dickmao/nnreddit][GitHub - dickmao/nnreddit: A Gnu s backend for Reddit]]
** Highlight current line [[https://www.reddit.com/r/emacs/comments/cazokz/globalhllinemode_vs_globalvisualline_mode/?utm_source=share&utm_medium=ios_app][https://www.reddit.com/r/emacs/comments/cazokz/globalhllinemode_vs_globalvisualline_mode/?utm_source]] 
** [[https://github.com/railwaycat/homebrew-emacsmacport/blob/master/README.md][homebrew-emacsmacport/README.md at master · railwaycat/homebrew-emacsmacport · GitHub]] Could be useful if you have problems with the next upgrade. 
** TODO Write a wrapper function to open url in eww.
To eww or not to eww | Pragmatic Emacs
:LOGBOOK:
- Note taken on [2019-07-23 Tue 08:53] \\
  Some good examples of how to make wrapper functions to start your browser of choice.
:END:
http://pragmaticemacs.com/emacs/to-eww-or-not-to-eww/

** Basics - Emacs Web Wowser
https://www.gnu.org/software/emacs/manual/html_node/eww/Basics.html#Basics

Eww-use-external-browser-content-type
** EmacsWiki: Browse Url
https://www.emacswiki.org/emacs/BrowseUrl
** Browse-URL - GNU Emacs Manual
https://www.gnu.org/software/emacs/manual/html_node/emacs/Browse_002dURL.html#Browse_002dURL
** How to make eww default browser in Emacs? - Emacs Stack Exchange
https://emacs.stackexchange.com/questions/7328/how-to-make-eww-default-browser-in-emacs#7332
** Should use these more [[https://www.reddit.com/r/emacs/comments/cecs6m/what_have_you_bound_to_function_keys/][What have you bound to function keys? : emacs]]

** ON RADAR [[https://github.com/accidentalrebel/emacs-slack-cli][GitHub - accidentalrebel/emacs-slack-cli: A simple emacs interface for the slack-cli Python program]]
So this looks promising.  But you have to use pip.  And I'm so unfamiliar with python that I don't know how to do it.  So learn.
** Obfuscate text as I'm typing it?

EDIT: Thank you to u/xtifr for showing me toggle-rot13-mode, exactly what I needed!

 https://www.reddit.com/r/emacs/comments/ciz8bz/obfuscate_text_as_im_typing_it/
** EmacsConf (online conference)
SCHEDULED: <2019-10-01 Tue>
https://emacsconf.org/2019/cfp

 Schedule Published   October 1, 2019  
 EmacsConf 2019!  November 2, 2019
** Set default font on Mac OS X Emacs.
https://orangebsd.wordpress.com/
** DONE Fix the cbff email script so that it works from the article buffer
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-08-09 Fri 09:06]
:END:
** CANCELED Hyperspace https://github.com/ieure/hyperspace-el
:LOGBOOK:
- State "CANCELED"   from "TODO"       [2019-08-13 Tue 07:40] \\
  Upon further consideration, my gut tells me I don't need this.
:END:

** TODO This looks simple and might be a good solution for getting away from Outlook [[http://davmail.sourceforge.net/index.html][DavMail POP/IMAP/SMTP/Caldav/Carddav/LDAP Exchange Gateway]]
** This creates a menu of commands.  Could be very useful one day. [[https://github.com/abo-abo/hydra][GitHub - abo-abo/hydra: make Emacs bindings that stick around]]

** TODO Things You Didn't Know About GNU Readline
https://twobithistory.org/2019/08/22/readline.html

* DONE [[message://%3C84A7432C-59E1-4DBA-A73B-8A9398B2C3F8@rush.edu%3E][Fix dired so that you can copy to other window by default]]
* DONE How to use outline mode with latex in emacs
[2018-01-17 Wed 04:23]
** outline minor mode automatically on.  Use \C-c and the @ before final key shortcut.  Shortcuts are the same as outline major mode otherwise.

* ON RADAR Emacs Keybindings for Mac OS X | Irreal                     :Read:
:PROPERTIES:
:CATEGORY: Read & Review
:END:
[2018-02-01 Thu 03:37]
http://irreal.org/blog/?p=259
* DONE Emacs Lisp is Fun? – Emacs Orgisms RSS feed?                    :Read:
:PROPERTIES:
:CATEGORY: Read & Review
:END:      
[2018-02-06 Tue 03:09]
https://eclectic614387068.wordpress.com/2018/01/26/emacs-lisp-is-fun/

* CANCELED GitHub - weirdNox/org-noter: Emacs document annotator, using Org-mode :Read:
:PROPERTIES:
:CATEGORY: Read & Review
:END:
:LOGBOOK:
- Note taken on [2019-06-27 Thu 15:10] \\
  Don't need this.
:END:
[2018-02-13 Tue 02:54]
https://github.com/weirdNox/org-noter


* DONE Enamored with Emacs – Delta-Lambda                              :Read:
:PROPERTIES:
:CATEGORY: Read & Review
:END:
[2018-02-15 Thu 03:50]
https://deltalambda.wordpress.com/2018/02/14/enamored-with-emacs/


* [#C] https://dzone.com/articles/yet-4-more-techniques-for-writing-better-java?utm_medium=feed&utm_source=feedpress.me&utm_campaign=Feed%3A+dzone%2Fjava
:PROPERTIES:
:CATEGORY: Read & Review
:END:
* [#C] https://dzone.com/articles/5-things-you-need-to-know-about-java-9?utm_medium=feed&utm_source=feedpress.me&utm_campaign=Feed%3A+dzone%2Fjava
:PROPERTIES:
:CATEGORY: Read & Review
:END:


* CANCELED Emacs as a C/C++ IDE on Windows – Blue2RGB
:PROPERTIES:
:CATEGORY: Read & Review
:END:
[2018-02-23 Fri 02:45]
https://blue2rgb.wordpress.com/2018/02/22/emacs-as-a-c-c-ide-on-windows/


* CANCELED Emacs Lisp Lambda Expressions Are Not Self-Evaluating « null program
:PROPERTIES:
:CATEGORY: Read & Review
:END:
[2018-02-23 Fri 03:02]
http://nullprogram.com/blog/2018/02/22/


* CANCELED Literate Benchmarking | Irreal
:PROPERTIES:
:CATEGORY: Read & Review
:END:
[2018-02-23 Fri 03:02]
http://irreal.org/blog/?p=6974


* CANCELED Literate DevOps
:PROPERTIES:
:CATEGORY: Read & Review
:END:
[2018-02-23 Fri 03:03]
http://www.howardism.org/Technical/Emacs/literate-devops.html


* CANCELED What's in an Emacs Lambda « null program
:PROPERTIES:
:CATEGORY: Read & Review
:END:
[2018-02-23 Fri 03:03]
http://nullprogram.com/blog/2017/12/14/


* CANCELED Buttery Smooth Emacs
:PROPERTIES:
:CATEGORY: Read & Review
:END:
[2018-02-13 Tue 03:04]
https://www.facebook.com/notes/daniel-colascione/buttery-smooth-emacs/10155313440066102/


* CANCELED Alex Schroeder: Diary rss?
:PROPERTIES:
:CATEGORY: Read & Review
:END:
[2018-02-13 Tue 03:06]
https://alexschroeder.ch/wiki

* Quick Hook Example

Let’s add a key (C-c q to run M-x shell) local to python-mode using a hook. For that to work we will need our special hook function, I’ve named it
mp-add-python-keys, and in it we need local-set-key, the function that adds a key to the active buffer’s local map. Observe that the command will be called within the
context of the buffer that invoked the major mode.

Next is the command that tells Emacs that we want to add a mode hook to Python.

(defun mp-add-python-keys ()
  (local-set-key (kbd "C-c q") 'shell))

(add-hook 'python-mode-hook 'mp-add-python-keys)

  [2018-07-15 Sun]
* Listing all the Mode Hooks

If you are unsure of the exact name of the mode hook, you can use this handy trick to list the ones Emacs can see:

C-u M-x apropos-variable RET -mode-hook$ RET.

That will show all mode hooks known to Emacs, including their docstring description. If you don’t see your mode it may be because Emacs hasn’t loaded it outright or
it lacks the autoload keyword.

* Listing all the Mode Maps

If you type this Emacs will give you an apropos buffer with all the known mode maps that follow the major mode naming scheme:

C-u M-x apropos-variable RET -mode-map$ RET

* You can pick any keyboard combination you desire – even if that key bind is already taken, so be careful – but Emacs has set aside certain keys for use by users.
Generally, all keys prefixed with C-c ? (where ? is a single character) are reserved for you, and you alone. In practice most third-party packages don’t give a hoot and
will gladly stuff their own key binds in there.

The other set of reserved keys are the F-keys from F5 and onwards. The other two prefix keys reserved to you are hyper and super. They are remnants from
ancient keyboards used in the 80s, but live on today in Emacs. Most PC-compatible keyboards won’t have a super or hyper key so some people rebind the Windows
key and the Application Context key to be hyper and super instead.

Anyway, if you want to use hyper then use the prefix key H- (e.g., H-q) and if you want super use the prefix key s-. Take note of the lower case ‘s’!

* It is possible for Emacs to enumerate all the active minor and major mode key bindings in a buffer by typing C-h m. This command is very useful if you want to learn
more about what a major or minor mode can do. Likewise, you can type out parts of a complete key (say M-s) and then type C-h to get a list of all keys that belong to
that prefix.

* Mastering Emacs: Key Bindings
https://www.masteringemacs.org/article/mastering-key-bindings-emacs

* DONE [[https://francopasut-en.blogspot.com/2019/03/emacs-org-mode-code-blocks-with-and.html][Emacs Org Mode code blocks with and without colors]] 
